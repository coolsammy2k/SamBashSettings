A pod called redis-backend has been created in the prod-x12cs namespace. It has been exposed as a service of type ClusterIP. Using a network policy called allow-redis-access, lock down access to this pod only to the following:
1. Any pod in the same namespace with the label backend=prod-x12cs.
2. All pods in the prod-yx13cs namespace.
All other incoming connections should be blocked.



apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-redis-access
  namespace: prod-x12cs
spec:
  podSelector:
    matchLabels:
      run: redis-backend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          access: redis
    - podSelector:
        matchLabels:
          backend: prod-x12cs
    ports:
    - protocol: TCP
      port: 6379




---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-policy
spec:
  podSelector:
    matchLabels:
      role: db
  policyTypes:
  - Ingress

  ingress:
  - from:
     - podSelector:
          matchLabels:
            name: api-pod
    ports:
     - protocol: TCP
       port: 3306


---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-policy
spec:
  podSelector:
    matchLabels:
      role: db
  policyTypes:
  - Ingress

  ingress:
  - from:
     - podSelector:
          matchLabels:
            name: api-pod
       namespaceSelector:
          matchLabels:
            name: prod     # Set label name=prod to the namespace prod
    ports:
     - protocol: TCP
       port: 3306

  ---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-policy
spec:
  podSelector:
    matchLabels:
      role: db
  policyTypes:
  - Ingress

  ingress:
  - from:
     - podSelector:
          matchLabels:
            name: api-pod
       namespaceSelector:
          matchLabels:
            name: prod     # Set label name=prod to the namespace prod
     - ipBlock:
          cidr: 192.168.5.10/32
    ports:
     - protocol: TCP
       port: 3306

---


apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-policy
spec:
  podSelector:
    matchLabels:
      role: db
  policyTypes:
  - Ingress

  ingress:
  - from:
     - podSelector:
          matchLabels:
            name: api-pod
     - namespaceSelector:
          matchLabels:
            name: prod     # Set label name=prod to the namespace prod
     - ipBlock:
          cidr: 192.168.5.10/32
    ports:
     - protocol: TCP
       port: 3306
