apiVersion: v1
kind: Pod
metadata:
  labels:
    name: triton
  name: triton
  namespace: alpha
spec:
  containers:
  - image: httpd
    name: triton
    securityContext:
      readOnlyRootFilesystem: true
    volumeMounts:
    - mountPath: /usr/local/apache2/logs
      name: log-volume
  volumes:
  - name: log-volume
    emptyDir: {}

---

#ensure container immutability

apiVersion: v1
kind: Pod
metadata:
  labels:
    run: nginx
  name: nginx
spec:
  containers:
  - image: nginx
    name: nginx
    securityContext:
      readOnlyRootFilesystem: true    # privileged: true 
    volumeMounts:
    - mountPath: /var/cache/nginx
      name: cache-volume
    - name: runtime-volume
      mountPath: /var/run

  volumes:
  - name: cache-volume
    emptyDir: {}
  - name: runtime-volume
    emptyDir: {}

 ---

 $ kubectl exec -it nginx -- cat /proc/sys/vm/swappiness
   60


Create Pod SecurityContext to make filesystem Read-Only
# docker run --ready-only --tmpfs /run my-container

---

Pod solaris is immutable as it have readOnlyRootFilesystem: true so it should not be deleted.
Pod sonata is running with privileged: true and triton doesn't define readOnlyRootFilesystem: true so both break the concept of immutability and should be deleted.
